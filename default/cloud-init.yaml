#cloud-config

users:
  - default
  - name: VM_USERNAME
    sudo:  ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
      - SSH_PUBLIC_KEY

runcmd:
- DEBIAN_FRONTEND=noninteractive apt-get remove -y landscape-client landscape-common adwaita-icon-theme humanity-icon-theme
- DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
- DEBIAN_FRONTEND=noninteractive apt-get -y autoremove

- |
  # disable unnecessary services
  systemctl disable man-db.timer man-db.service --now
  systemctl disable apport.service apport-autoreport.service  --now
  systemctl disable apt-daily.service apt-daily.timer --now
  systemctl disable apt-daily-upgrade.service apt-daily-upgrade.timer --now
  systemctl disable unattended-upgrades.service --now
  systemctl disable motd-news.service motd-news.timer --now
  systemctl disable bluetooth.target --now
  systemctl disable ua-timer.timer ua-timer.service --now
  systemctl disable systemd-tmpfiles-clean.timer --now

  # disable IPv6
  echo "net.ipv6.conf.all.disable_ipv6=1" | tee -a /etc/sysctl.conf
  echo "net.ipv6.conf.default.disable_ipv6=1" | tee -a /etc/sysctl.conf
  echo "net.ipv6.conf.lo.disable_ipv6=1" | tee -a /etc/sysctl.conf
  sysctl -w net.ipv6.conf.all.disable_ipv6=1
  sysctl -w net.ipv6.conf.default.disable_ipv6=1
  sysctl -w net.ipv6.conf.lo.disable_ipv6=1
  
  # increment inotify limit (to supress GoLand complaint on watches)
  echo "fs.inotify.max_user_watches = 524288" | tee -a /etc/sysctl.conf

  # enable forwarding to enable networking from host to docker in VM
  echo "net.ipv4.ip_forward=1" | tee -a /etc/sysctl.conf
  echo "net.ipv4.conf.all.proxy_arp=1" | tee -a /etc/sysctl.conf
  sysctl -w net.ipv4.ip_forward=1
  sysctl -w net.ipv4.conf.all.proxy_arp=1

  sysctl -p

- |
  snap install multipass-sshfs
  snap install go --channel=1.21/stable --classic
  snap refresh

- |
  # packages
  apt-get update
  apt-get install -y jq zsh fzf sshfs clang-format gnupg unzip
  apt-get install -y build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev libffi-dev python3-pip

- |
  # oh-my-zsh
  sudo -u VM_USERNAME sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
  sudo -u VM_USERNAME git clone https://github.com/zsh-users/zsh-autosuggestions.git ~VM_USERNAME/.oh-my-zsh/custom/plugins/zsh-autosuggestions
  sudo -u VM_USERNAME git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~VM_USERNAME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
  sudo -u VM_USERNAME sed -i 's/plugins=(git)/plugins=(fzf git zsh-autosuggestions zsh-syntax-highlighting virtualenv colored-man-pages kubectl colorize)/g' ~VM_USERNAME/.zshrc
  sudo -u VM_USERNAME echo 'export PATH=$PATH:$HOME/.local/bin' >> ~VM_USERNAME/.zshrc

  # change default shell
  sudo chsh -s /bin/zsh VM_USERNAME

  # install docker
  curl -fsSL https://get.docker.com -o get-docker.sh
  sh get-docker.sh --version 23.0 --channel stable

  addgroup --system docker
  adduser VM_USERNAME docker
  systemctl enable docker

  # install nodejs
  mkdir -p /etc/apt/keyrings
  curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
  NODE_MAJOR=20
  echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
  apt-get update
  apt-get install nodejs -y

  # Install rbenv
  sudo -u VM_USERNAME git config --global core.editor "vim"
  sudo -u VM_USERNAME git clone https://github.com/rbenv/rbenv.git ~VM_USERNAME/.rbenv
  echo '# rbenv setup' >> ~VM_USERNAME/.zshrc
  echo 'export RBENV_ROOT=~VM_USERNAME/.rbenv' >> ~VM_USERNAME/.zshrc
  echo 'export PATH="$PATH:$RBENV_ROOT/bin:$PATH"'  >> ~VM_USERNAME/.zshrc
  echo 'eval "$(~VM_USERNAME/.rbenv/libexec/rbenv init - zsh)"'  >> ~VM_USERNAME/.zshrc

  mkdir ~VM_USERNAME/.rbenv/plugins
  git clone https://github.com/rbenv/ruby-build.git ~VM_USERNAME/.rbenv/plugins/ruby-build
  sudo -u VM_USERNAME zsh -c 'source ~VM_USERNAME/.zshrc; export PREFIX="~VM_USERNAME/.rbenv/ruby-3.1.2";  cd ~VM_USERNAME/ ; ~VM_USERNAME/.rbenv/plugins/ruby-build/install.sh; rbenv install 3.1.2; rbenv global 3.1.2; rbenv local 3.1.2'

- |
  # project related dev workspace (git clone requires ssh keys to be setup)

  sudo -u VM_USERNAME mkdir -p ~VM_USERNAME/go/src/github.com/Kong
  sudo -u VM_USERNAME mkdir -p ~VM_USERNAME/go/src/github.com/kumahq
  sudo -u VM_USERNAME git clone https://github.com/kumahq/kuma.git ~VM_USERNAME/go/src/github.com/kumahq/kuma
  sudo -u VM_USERNAME bash -c 'cd ~VM_USERNAME/go/src/github.com/kumahq/kuma ; make dev/tools'
  
  
  sudo -u VM_USERNAME bash -c 'cd ~VM_USERNAME/ ; curl -L https://kuma.io/installer.sh | VERSION=2.4.3 sh - ; mv ./kuma-2.4.3/ ./.kumactl/'
  sudo -u VM_USERNAME echo 'export PATH=$PATH:$HOME/.kumactl/bin:$HOME/.kuma-dev/kuma-master/bin' >> ~VM_USERNAME/.zshrc

  npm install netlify-cli -g
  npm install yarn -g

final_message: "The system is up and ready, initialization took $UPTIME seconds"


# Example: https://github.com/Abuelodelanada/charm-dev-utils/blob/main/cloud-init/charm-dev-juju-latest-edge.yaml